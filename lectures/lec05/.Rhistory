options(java.parameters = c("-Xmx4000m"))
library(YARF)
q()
options(java.parameters = c("-Xmx4000m"))
library(YARF)
#test 1a - linear model
n = 100
X = data.frame(x1 = 0 : (n - 1))
y = 0 + 1 * X[,1] + rnorm(n, 0, 0.1)
yarf_mod = YARF(X, y, num_trees = 1)
yarf_mod
rf_mod = randomForest(X, y, num_trees = 1)
rf_mod
library(randomForest)
rf_mod = randomForest(X, y, num_trees = 1)
rf_mod
noos = 200
Xoos = data.frame(x1 = runif(noos, 0, 100))
yoos_expe = Xoos[, 1]
yoos_yarf = predict(yarf_mod, Xoos)
yoos_rf = predict(rf_mod, Xoos)
sum((yoos_yarf - yoos_expe)^2) / noos
sum((yoos_rf - yoos_expe)^2) / noos
plot(yoos_expe, yoos_yarf)
abline(a = 0, b = 1, col = "blue")
library(BlandAltmanLeh)
bland.altman.plot(yoos_yarf, yoos_rf,
main = "", xlab = "Means", ylab = "Differences (YARF - RF)")
bland.altman.stats(yoos_yarf, yoos_rf)
install.packages("BlandAltmanLeh")
library(BlandAltmanLeh)
bland.altman.plot(yoos_yarf, yoos_rf,
main = "", xlab = "Means", ylab = "Differences (YARF - RF)")
bland.altman.stats(yoos_yarf, yoos_rf)
rf_mod
YARF_update_with_oob_results(yarf_mod)
4075.0729-3595.9341
exo(479.1388)
exp(479.1388)
1-pchisq(1, .05)
pchisq(1, .05)
?pchisq
?qchisq(.05, 1)
qchisq(.05, 1)
qchisq(.95, 1)
exp(-(3595.9341))
exp(0.0273 + (-0.0288)* (30))
0.4331375/(1+0.4331375)
exp(0.0273 + (-0.0288)* (31))
0.4208/(1+0.4208)
exp(0.0273 + (-0.0288)* (1))
0.9985011/(1+0.9985011)
exp(0.0273 + (-0.0288)* (2))
0.9701544/( 0.9701544 + 1)
exp(0.0273 + (-0.0288)* (60))
0.1825557/(1+0.1825557
)
exp(0.0273 + (-0.0288)* (61))
0.17737/(1+0.17737)
0.02731271/sqrt(761)
0.02731271/sqrt(958.28)
0.0387682/sqrt(761)
0.0387682/sqrt(958.28)
1012+531
857+4632
1543+5489
1012+857
531+4632
531/1543
857/5489
(531+857)/7032
531/5163
857/1069
857/1869
97/1869
2669/5163
2669/4441
97/2591
2669+97
2766/7032
1543/7032
e^(0.0273 - .0288 * 100) / (e^(0.0273 - .0288 * 100) + 1)
exp(0.0273 - .0288 * 100) / (exp(0.0273 - .0288 * 100) + 1)
exp(0.0273 - .0288 * 101) / (exp(0.0273 - .0288 * 101) + 1)
n = 100
sigma = 2
set.seed(422.722)
x = seq(0, 10, length.out = n)
f_of_x = 3 + 1.5 * x #true... pretend it's hidden
e = rnorm(n, 0, sigma)
y = f_of_x + e
Xy = data.frame(x, y)
mod = lm(y ~ poly(x, 20), Xy)
plot(x, y)
xstars = seq(min(x), max(x), length.out = 10000)
yhats = predict(mod, data.frame(x = xstars))
points(xstars, yhats, type = "l")
exp(3.751)
exp(3.751+.306)
exp(4.922)
exp(4.922 - 0.73)
exp(4.922 - 0.53)
install.packages("survival")
library(survival)
library(survival)
install.packages("survival")
library(survival)
library(surv)
?Surv
??Surv
library("survival")
n = 25
sigma = 1
x = runif(n, 10, 15)
y = x + rnorm(n, 0, sigma)
plot(x, y, xlim = c(0, 25), ylim = c(0, 25))
lin_mod = lm(y ~ x)
abline(lin_mod, col = "blue")
poly_mod = lm(y ~ poly(x, 6))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 4))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 7))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 8))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 9))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 11))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 12))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 2))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 3))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 4))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
poly_mod = lm(y ~ poly(x, 15))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
plot(x, y, xlim = c(0, 25), ylim = c(0, 25))
poly_mod = lm(y ~ poly(x, 15))
xstars = seq(0, 25, length.out = 10000)
yhats = predict(poly_mod, data.frame(x = xstars))
points(xstars, yhats, type = "l", col = "green")
install.packages("mlr")
library(mlr)
library(survival)
X = fread("whitewine.csv")
library(data.table)
setwd("C:/Users/Adam/workspace/Wharton_Stat_422_722/lectures/lec05")
X = fread("whitewine.csv")
X = fread("white_wine.csv")
head(X)
mod = lm(quality ~ ., X)
summary(mod)
aic(mod)
AIC(mod)
